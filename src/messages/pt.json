{
  "Navbar": {
    "home": "Início",
    "about": "Sobre",
    "projects": "Projetos",
    "toolsAndTechs": "Ferramentas e Tecnologias",
    "contact": "Contato",
    "test": "Teste CI/CD"
  },

  "Home": {
    "title": "Bem-vindo ao Meu Portfólio",
    "description": "Desenvolvedor apaixonado por criar soluções modernas e eficientes. Explore meus projetos e tecnologias favoritas!",
    "techStackTitle": "Minhas Tecnologias",
    "techStackDescription": "Aqui estão algumas das ferramentas que utilizo para construir aplicações incríveis:",
    "tech": {
      "javamail": "Envio emails diretamente de aplicações Java com JavaMail, configurando servidores SMTP para comunicação eficiente.",
      "intl": "Uso a API Intl do JavaScript para internacionalização, formatando datas, números e strings de forma multilíngue.",
      "docker": "Containerizo aplicações com Docker e Docker Compose, garantindo consistência e escalabilidade em diferentes ambientes.",
      "typescript": "Escrevo código seguro e tipado com TypeScript, aumentando a robustez das aplicações.",
      "tailwind": "Estilizo interfaces rapidamente com Tailwind CSS, criando designs modernos e responsivos."
    },
    "contactPrompt": "Saiba mais na seção Tools and Techs!",
    "cta": "Veja Meus Projetos"
  },
  "About": {
    "title": "Sobre Nós",
    "description": "Nossa história carregada de neon"
  },
  "Projects": {
    "title": "Meus Projetos",
    "description": "Aqui estão alguns dos projetos que desenvolvi, demonstrando minhas habilidades e paixões.",
    "project1": {
      "title": "Weather App",
      "description": "A Weather App é uma aplicação web que permite aos usuários consultar o clima em tempo real de qualquer cidade do mundo, utilizando a API OpenWeatherMap para dados climáticos e a API Unsplash para imagens dinâmicas de fundo. Desenvolvida com Next.js e TypeScript, a aplicação consome APIs externas via Axios, exibindo informações como temperatura, umidade, velocidade do vento e descrição do clima, acompanhadas pela bandeira do país correspondente (via FlagsAPI). O design é responsivo, estilizado com Tailwind CSS, e oferece uma experiência visual imersiva com imagens que refletem a cidade pesquisada."
    },
    "project2": {
      "title": "Sistema de Gerenciamento de Ordens de Compra",
      "description": "O Sistema de Gerenciamento de Ordens de Compra é uma aplicação backend desenvolvida com Java Spring Boot, projetada para gerenciar ordens de compra por meio de operações CRUD (Create, Read, Update, Delete). Utilizando uma arquitetura RESTful, a aplicação expõe endpoints para cadastrar, consultar, atualizar e excluir ordens, integrando-se a um banco de dados relacional via Spring Data JPA com Hibernate. Implementei validações robustas com Bean Validation, mapeamento objeto-relacional (ORM) eficiente e controle transacional para garantir integridade dos dados. A API foi estruturada com padrões de design como DTOs (Data Transfer Objects) para encapsulamento e segurança, oferecendo uma base escalável para sistemas de e-commerce ou ERP."
    },
    "comprasApp": {
      "title": "Audio IBP App",
      "description": "Um aplicativo híbrido desenvolvido em Flutter para gerenciamento de equipamentos e relatórios. Integra tecnologias como JavaMail para envio de e-mails, JWT para autenticação segura, e consome a mesma API CRUD usada na versão web . O app suporta web (hospedado no Firebase Hosting) e Android (distribuído via APK), com recursos como notificações locais, internacionalização e integração com serviços de terceiros.",
      "webLink": "Acessar Versão Web",
      "apkLink": "Baixar APK (Android)"
    }
  },

  "Footer": {
    "about": "Sobre",
    "description": "Um portfólio showcase das minhas habilidades e projetos como desenvolvedor.",
    "contact": "Contato",
    "email": "jorgesoares2997@gmail.com",
    "rights": "© 2025 Jorge Soares. Todos os direitos reservados.",
    "projects": {
      "title": "Projetos",
      "comprasAppWeb": "Compras App - Versão Web",
      "comprasAppAPK": "Compras App - APK Android",
      "weather": "Weather - Aplicativo de Clima",
      "comprasSite": "Site de Compras"
    }
  },
  "Contact": {
    "sendMessage": "Enviar Mensagem",
    "title": "Página de Contato",
    "myInfo": "Minhas informações",
    "form": {
      "name": "Nome",
      "email": "Email",
      "message": "Mensagem"
    },
    "techDescription": "Vamos nos conectar! Se você tem uma ideia de projeto, uma dúvida ou só quer bater um papo, fique à vontade para entrar em contato.",
    "send": "Enviar",
    "sending": "Enviando...",
    "successMessage": "Mensagem enviada com sucesso!",
    "errorMessage": "Erro ao enviar a mensagem. Tente novamente."
  },
  "Aboutpage": {
    "title": "Sobre",
    "me": {
      "title": "Sobre Mim",
      "intro": "Olá, meu nome é Jorge Soares, e estou cursando Análise e Desenvolvimento de Sistemas com uma curiosidade profunda pelo mundo da tecnologia. Tenho aprimorado minhas habilidades construindo aplicações full-stack, entregando soluções completas do início ao fim.",
      "expertise1": "Minha experiência inclui o desenvolvimento de APIs RESTful com ",
      "expertise2": ", integrando funcionalidades como JavaMail, Spring Security e JWT para sistemas seguros e eficientes. Também utilizo ",
      "expertise3": " para containerizar minhas aplicações, garantindo escalabilidade e deploy contínuo.",
      "frontend1": "No frontend, crio plataformas responsivas e dinâmicas usando ",
      "frontend2": ", estilizadas com ",
      "frontend3": "Gerencio estados com ",
      "frontend4": " e asseguro tipagem robusta com ",
      "database": "Minha experiência com bancos de dados é focada em ",
      "database2": ", permitindo-me criar soluções confiáveis e otimizadas.",
      "currently1": "Atualmente, contribuo como programador na ",
      "currently2": ", onde aplico minhas habilidades em projetos reais.",
      "goal": "Meu objetivo é expandir meu conhecimento e desenvolver aplicações móveis com ",
      "goal2": ", avançando ainda mais na indústria de tecnologia.",
      "connect": "Estou pronto para me conectar com outros profissionais e contribuir para projetos significativos que impulsionem inovação e impacto.",
      "and": " e "
    },
    "portfolio": {
      "title": "Sobre Este Portfólio",
      "intro": "Este portfólio é um reflexo da minha jornada como desenvolvedor full-stack. Desenvolvido com ",
      "intro2": ", ele utiliza ",
      "intro3": " para um design moderno e responsivo.",
      "frontend1": "No frontend, implementei gerenciamento de estado com ",
      "frontend2": " para lidar com traduções e autenticação, enquanto o sistema de internacionalização foi criado do zero com suporte a múltiplos idiomas (português, inglês e espanhol).",
      "frontend3": "As animações sutis e o tema neon foram inspirados pela estética cyberpunk, trazendo uma experiência visual única.",
      "backend1": "No backend, construí uma API RESTful com ",
      "backend2": ", hospedada em Render",
      "backend3": "Ela suporta autenticação social via OAuth 2.0 com Google, LinkedIn, GitHub e Apple, além de envio de emails e mensagens via WhatsApp usando ",
      "backend4": " para segurança.",
      "goal": "O objetivo deste projeto foi demonstrar minhas habilidades em criar soluções completas, desde a concepção até o deploy, integrando frontend, backend e serviços externos de forma eficiente e escalável."
    },
    "and": " e "
  },

  "ToolsAndTechs": {
    "title": "Ferramentas e Tecnologias",
    "flagsLabel": "Escolha o idioma:",
    "tech1": {
      "title": "JavaMail",
      "description": "JavaMail é uma API amplamente utilizada para o envio e recebimento de emails em aplicações Java. Ela permite a configuração de servidores SMTP, POP e IMAP, garantindo uma comunicação eficiente e segura. Grandes empresas como Oracle, IBM e Red Hat utilizam soluções baseadas no JavaMail para gerenciar sistemas de email corporativos e notificações automatizadas."
    },
    "tech2": {
      "title": "Intl (JavaScript)",
      "description": "O `Intl` é uma API nativa do JavaScript que oferece ferramentas poderosas para internacionalização (i18n), permitindo a formatação de datas, números e strings de acordo com diferentes idiomas e regiões. Utilizo o `Intl` para criar experiências multilíngues consistentes, como formatar valores monetários (ex.: `Intl.NumberFormat`), datas (ex.: `Intl.DateTimeFormat`) e comparações de strings sensíveis à localidade (ex.: `Intl.Collator`). Nesta aplicação, o `Intl` poderia ser usado para complementar o sistema de tradução manual, garantindo que elementos dinâmicos, como datas ou preços, sejam exibidos corretamente para cada idioma (português, inglês e espanhol). É uma solução leve e integrada, eliminando a necessidade de bibliotecas externas para tarefas comuns de i18n."
    },
    "tech3": {
      "title": "Docker e Docker Compose",
      "description": "O Docker é uma plataforma de containerização que utilizo para encapsular aplicações e suas dependências em containers leves e portáteis, garantindo consistência entre ambientes de desenvolvimento, teste e produção. Com o Docker Compose, orquestro múltiplos containers de forma simplificada, definindo serviços, redes e volumes em um arquivo YAML. Por exemplo, nesta aplicação, eu poderia containerizar o frontend (Next.js), o backend (Spring Boot) e um serviço SMTP (como MailHog) em um único `docker-compose.yml`, permitindo inicialização com um comando (`docker-compose up`). Isso facilita o deploy em plataformas como Render ou localmente, reduzindo problemas de configuração e melhorando a escalabilidade."
    },
    "tech4": {
      "title": "Axios (Consumo de APIs)",
      "description": "O Axios é uma biblioteca HTTP baseada em promessas que utilizo para consumir APIs de forma eficiente e robusta em aplicações web. Com suporte a requisições GET, POST e tratamento de erros, o Axios simplifica a integração com serviços externos, como a OpenWeatherMap para dados climáticos e a Unsplash para imagens dinâmicas. Neste projeto, implementei chamadas assíncronas para buscar informações em tempo real, manipulando respostas JSON e atualizando a UI dinamicamente. O exemplo ao lado demonstra como o Axios é usado para buscar o clima de uma cidade e uma imagem de fundo, destacando sua facilidade de uso e flexibilidade."
    },
    "tech5": {
      "title": "Amazon S3 (Armazenamento em Nuvem)",
      "description": "Todas as imagens e vídeos deste site são armazenados em um bucket do Amazon S3 (Simple Storage Service), um serviço de armazenamento em nuvem altamente escalável e durável da AWS. O S3 oferece uma infraestrutura de armazenamento de objetos que permite hospedar arquivos de forma segura, acessível e econômica, com 99,999999999% de durabilidade. Utilizo o S3 para centralizar ativos multimídia, aproveitando sua integração com aplicações web via URLs públicas ou pré-assinadas, além de sua capacidade de escalar automaticamente conforme o tráfego. Esse serviço é essencial para garantir baixa latência, alta disponibilidade e backups confiáveis, otimizando a performance e a experiência do usuário em projetos distribuídos."
    },
    "tech6": {
      "title": "JWT (JSON Web Tokens)",
      "description": "Utilizo JSON Web Tokens (JWT) para autenticação e autorização seguras no backend deste projeto, implementado com Java Spring Boot. O JWT é um padrão aberto que encapsula informações do usuário em um token assinado digitalmente, composto por header, payload e signature, garantindo integridade e autenticidade. Após o login, o token é gerado e enviado ao cliente, que o utiliza em requisições subsequentes via cabeçalho Authorization. Sua importância em sites robustos reside na statelessness, permitindo escalabilidade horizontal sem armazenamento de sessão no servidor, além de suportar validação eficiente e proteção contra ataques como CSRF e XSS quando bem configurado."
    },
    "tech7": {
      "title": "Zustand (Gerenciamento de Estado)",
      "description": "Zustand é uma biblioteca leve de gerenciamento de estado que utilizo no frontend deste site, construído com Next.js. Diferente de soluções mais pesadas como Redux, Zustand oferece uma API minimalista e reativa, baseada em hooks, para gerenciar estados globais como idioma e temas. No projeto, implementei o controle de traduções com Zustand, permitindo atualizações em tempo real sem re-renderizações desnecessárias. Sua importância para sites robustos está na simplicidade, performance otimizada (evitando boilerplate) e escalabilidade, tornando-o ideal para aplicações modernas que exigem estados eficientes e fáceis de manter."
    },
    "tech8": {
      "title": "OpenID (Autenticação Descentralizada)",
      "description": "OpenID é um protocolo de autenticação descentralizado que integrei ao projeto para oferecer login seguro via provedores de identidade externos, como Google ou Auth0. Baseado em OAuth 2.0, o OpenID Connect adiciona uma camada de identidade ao fluxo de autorização, retornando um ID Token que autentica o usuário. No backend Spring Boot, configurei o suporte a OpenID para validar tokens e gerenciar sessões, reduzindo a necessidade de um sistema de login local. Sua importância em sites robustos está na segurança aprimorada, interoperabilidade com serviços populares e na experiência do usuário, permitindo autenticação rápida e confiável sem gestão direta de senhas."
    },
    "tech9": {
      "title": "React Joyride",
      "description": "Uma biblioteca para React que permite criar tutoriais interativos e guias passo a passo no seu aplicativo web. Ideal para melhorar a experiência do usuário ao introduzir funcionalidades ou destacar atualizações, com tooltips personalizáveis e suporte a navegação contínua."
    }
  },
  "Form": {
    "toPlaceholder": "Digite o email do destinatário",
    "subjectPlaceholder": "Digite o assunto",
    "bodyPlaceholder": "Digite sua mensagem",
    "submitButton": "Enviar",
    "sending": "Enviando...",
    "success": "Mensagem enviada com sucesso: ",
    "error": "Erro ao enviar: ",
    "invalidEmail": "Email inválido"
  }
}
