{
  "Navbar": {
    "home": "Inicio",
    "about": "Acerca de",
    "projects": "Proyectos",
    "toolsAndTechs": "Herramientas y Tecnologías",
    "contact": "Contacto"
  },
  "Home": {
    "title": "Bienvenido a Mi Portafolio",
    "description": "Desarrollador apasionado por crear soluciones modernas y eficientes. ¡Explora mis proyectos y tecnologías favoritas!",
    "techStackTitle": "Mis Tecnologías",
    "techStackDescription": "Estas son algunas de las herramientas que utilizo para construir aplicaciones increíbles:",
    "tech": {
      "javamail": "Envío correos directamente desde aplicaciones Java con JavaMail, configurando servidores SMTP para una comunicación eficiente.",
      "intl": "Uso la API Intl de JavaScript para internacionalización, formateando fechas, números y cadenas de manera multilingüe.",
      "docker": "Contenerizo aplicaciones con Docker y Docker Compose, asegurando consistencia y escalabilidad en diferentes entornos.",
      "typescript": "Escribo código seguro y tipado con TypeScript, aumentando la robustez de las aplicaciones.",
      "tailwind": "Estilizo interfaces rápidamente con Tailwind CSS, creando diseños modernos y responsivos."
    },
    "contactPrompt": "¡Conoce más en la sección Tools and Techs!",
    "cta": "Ver Mis Proyectos"
  },
  "About": {
    "title": "Sobre Nosotros",
    "description": "Nuestra historia cargada de neón"
  },
  "Projects": {
    "title": "Mis Proyectos",
    "description": "Aquí están algunos de los proyectos que he desarrollado, mostrando mis habilidades y pasiones.",
    "project1": {
      "title": "Weather App",
      "description": "La Weather App es una aplicación web que permite a los usuarios consultar el clima en tiempo real de cualquier ciudad del mundo, utilizando la API OpenWeatherMap para datos climáticos y la API Unsplash para imágenes dinámicas de fondo. Desarrollada con Next.js y TypeScript, la aplicación consume APIs externas vía Axios, mostrando detalles como temperatura, humedad, velocidad del viento y descripción del clima, junto a la bandera del país correspondiente (vía FlagsAPI). El diseño es responsivo, estilizado con Tailwind CSS, y ofrece una experiencia visual inmersiva con imágenes que reflejan la ciudad buscada."
    }
  },
  "Contact": {
    "sendMessage": "Enviar Mensaje",
    "title": "Página de Contacto",
    "myInfo": "Mis informaciones",
    "form": {
      "name": "Nombre",
      "email": "Correo Electrónico",
      "message": "Mensaje"
    },
    "send": "Enviar",
    "sending": "Enviando...",
    "successMessage": "¡Mensaje enviado con éxito!",
    "errorMessage": "Error al enviar el mensaje. Intenta de nuevo."
  },
  "Footer": {
    "about": "Acerca de",
    "description": "Un proyecto Next.js futurista con vibras neón",
    "links": "Enlaces",
    "contact": "Contacto",
    "email": "jorgesoares2997@gmail.com",
    "rights": "© 2025 Todos los derechos reservados"
  },

  "Aboutpage": {
    "title": "Acerca de",
    "me": {
      "title": "Sobre Mí",
      "intro": "Hola, mi nombre es Jorge Soares y estoy cursando Análisis y Desarrollo de Sistemas con una profunda curiosidad por el mundo de la tecnología. He estado perfeccionando mis habilidades construyendo aplicaciones full-stack, entregando soluciones completas de principio a fin.",
      "expertise1": "Mi experiencia incluye el desarrollo de APIs RESTful con ",
      "expertise2": ", integrando funcionalidades como JavaMail, Spring Security y JWT para sistemas seguros y eficientes. También utilizo ",
      "expertise3": " para contenerizar mis aplicaciones, garantizando escalabilidad y despliegue continuo.",
      "frontend1": "En el frontend, creo plataformas responsivas y dinámicas usando ",
      "frontend2": ", estilizadas con ",
      "frontend3": "Gestiono estados con ",
      "frontend4": " y aseguro una tipificación robusta con ",
      "database": "Mi experiencia con bases de datos se centra en ",
      "database2": ", permitiéndome crear soluciones confiables y optimizadas.",
      "currently1": "Actualmente, contribuyo como programador en ",
      "currently2": ", donde aplico mis habilidades en proyectos reales.",
      "goal": "Mi objetivo es ampliar mi conocimiento y desarrollar aplicaciones móviles con ",
      "goal2": ", avanzando aún más en la industria tecnológica.",
      "connect": "Estoy listo para conectarme con otros profesionales y contribuir a proyectos significativos que impulsen la innovación y el impacto."
    },
    "portfolio": {
      "title": "Sobre Este Portafolio",
      "intro": "Este portafolio es un reflejo de mi trayectoria como desarrollador full-stack. Desarrollado con ",
      "intro2": ", utiliza ",
      "intro3": " para un diseño moderno y responsivo.",
      "frontend1": "En el frontend, implementé la gestión de estado con ",
      "frontend2": " para manejar traducciones y autenticación, mientras que el sistema de internacionalización fue creado desde cero con soporte para múltiples idiomas (portugués, inglés y español).",
      "frontend3": "Las animaciones sutiles y el tema neón se inspiraron en la estética cyberpunk, ofreciendo una experiencia visual única.",
      "backend1": "En el backend, construí una API RESTful con ",
      "backend2": ", alojada en Render (",
      "backend3": "Soporta autenticación social vía OAuth 2.0 con Google, LinkedIn, GitHub y Apple, además de envío de correos y mensajes por WhatsApp usando ",
      "backend4": " para seguridad.",
      "goal": "El objetivo de este proyecto fue demostrar mis habilidades para crear soluciones completas, desde la concepción hasta el despliegue, integrando frontend, backend y servicios externos de manera eficiente y escalable."
    },
    "and": " y "
  },
  "ToolsAndTechs": {
    "title": "Herramientas y Tecnologías",
    "flagsLabel": "Elige el idioma:",
    "tech1": {
      "title": "JavaMail",
      "description": "JavaMail es una API ampliamente utilizada para enviar y recibir correos electrónicos en aplicaciones Java. Permite la configuración de servidores SMTP, POP e IMAP, garantizando una comunicación eficiente y segura. Grandes empresas como Oracle, IBM y Red Hat utilizan soluciones basadas en JavaMail para gestionar sistemas de correo corporativo y notificaciones automatizadas."
    },
    "tech2": {
      "title": "Intl (JavaScript)",
      "description": "La API `Intl` es un conjunto de herramientas nativas de JavaScript que proporciona capacidades potentes para internacionalización (i18n), permitiendo formatear fechas, números y cadenas según diferentes idiomas y regiones. Utilizo `Intl` para crear experiencias multilingües consistentes, como formatear valores monetarios (ej.: `Intl.NumberFormat`), fechas (ej.: `Intl.DateTimeFormat`) y comparaciones de cadenas sensibles a la localidad (ej.: `Intl.Collator`). En esta aplicación, `Intl` podría complementar el sistema de traducción manual, asegurando que elementos dinámicos como fechas o precios se muestren correctamente para cada idioma (portugués, inglés y español). Es una solución ligera e integrada que elimina la necesidad de bibliotecas externas para tareas comunes de i18n."
    },
    "tech3": {
      "title": "Docker y Docker Compose",
      "description": "Docker es una plataforma de contenerización que utilizo para encapsular aplicaciones y sus dependencias en contenedores ligeros y portátiles, garantizando consistencia entre entornos de desarrollo, pruebas y producción. Con Docker Compose, orquesto múltiples contenedores de manera simplificada, definiendo servicios, redes y volúmenes en un archivo YAML. Por ejemplo, en esta aplicación, podría contenerizar el frontend (Next.js), el backend (Spring Boot) y un servicio SMTP (como MailHog) en un solo `docker-compose.yml`, permitiendo iniciarlo con un comando (`docker-compose up`). Esto facilita el despliegue en plataformas como Render o localmente, reduciendo problemas de configuración y mejorando la escalabilidad."
    },
    "tech4": {
      "title": "Axios (Consumo de APIs)",
      "description": "Axios es una biblioteca HTTP basada en promesas que utilizo para consumir APIs de manera eficiente y robusta en aplicaciones web. Con soporte para solicitudes GET, POST y manejo de errores, Axios simplifica la integración con servicios externos como OpenWeatherMap para datos climáticos y Unsplash para imágenes dinámicas. En este proyecto, implementé llamadas asíncronas para obtener datos en tiempo real, manejando respuestas JSON y actualizando la UI dinámicamente. El ejemplo al lado demuestra cómo Axios obtiene el clima de una ciudad y una imagen de fondo, destacando su facilidad de uso y flexibilidad."
    },
    "tech5": {
      "title": "Amazon S3 (Almacenamiento en la Nube)",
      "description": "Todas las imágenes y videos de este sitio están almacenados en un bucket de Amazon S3 (Simple Storage Service), un servicio de almacenamiento en la nube altamente escalable y duradero de AWS. El S3 ofrece una infraestructura de almacenamiento de objetos que permite alojar archivos de forma segura, accesible y económica, con un 99,999999999% de durabilidad. Utilizo S3 para centralizar activos multimedia, aprovechando su integración con aplicaciones web mediante URLs públicas o pre-firmadas, además de su capacidad para escalar automáticamente según el tráfico. Este servicio es esencial para garantizar baja latencia, alta disponibilidad y copias de seguridad confiables, optimizando el rendimiento y la experiencia del usuario en proyectos distribuidos."
    },
    "tech6": {
      "title": "JWT (JSON Web Tokens)",
      "description": "Utilizo JSON Web Tokens (JWT) para autenticación y autorización seguras en el backend de este proyecto, implementado con Java Spring Boot. El JWT es un estándar abierto que encapsula información del usuario en un token firmado digitalmente, compuesto por header, payload y signature, garantizando integridad y autenticidad. Tras el inicio de sesión, el token se genera y se envía al cliente, que lo usa en solicitudes posteriores mediante el encabezado Authorization. Su importancia en sitios robustos radica en su statelessness, permitiendo escalabilidad horizontal sin almacenamiento de sesiones en el servidor, además de soportar validación eficiente y protección contra ataques como CSRF y XSS cuando está bien configurado."
    },
    "tech7": {
      "title": "Zustand (Gestión de Estado)",
      "description": "Zustand es una biblioteca ligera de gestión de estado que utilizo en el frontend de este sitio, construido con Next.js. A diferencia de soluciones más pesadas como Redux, Zustand ofrece una API minimalista y reactiva, basada en hooks, para gestionar estados globales como idioma y temas. En este proyecto, implementé el control de traducciones con Zustand, permitiendo actualizaciones en tiempo real sin re-renderizaciones innecesarias. Su importancia para sitios robustos está en su simplicidad, rendimiento optimizado (evitando boilerplate) y escalabilidad, siendo ideal para aplicaciones modernas que requieren una gestión de estado eficiente y fácil de mantener."
    },
    "tech8": {
      "title": "OpenID (Autenticación Descentralizada)",
      "description": "OpenID es un protocolo de autenticación descentralizado que integré en este proyecto para ofrecer un inicio de sesión seguro mediante proveedores de identidad externos, como Google o Auth0. Basado en OAuth 2.0, OpenID Connect añade una capa de identidad al flujo de autorización, devolviendo un ID Token que autentica al usuario. En el backend de Spring Boot, configuré el soporte para OpenID para validar tokens y gestionar sesiones, reduciendo la necesidad de un sistema de inicio de sesión local. Su importancia en sitios robustos radica en la seguridad mejorada, la interoperabilidad con servicios populares y la experiencia del usuario, permitiendo una autenticación rápida y confiable sin gestión directa de contraseñas."
    }
  },
  "Form": {
    "toPlaceholder": "Ingresa el correo del destinatario",
    "subjectPlaceholder": "Ingresa el asunto",
    "bodyPlaceholder": "Ingresa tu mensaje",
    "submitButton": "Enviar",
    "sending": "Enviando...",
    "success": "Mensaje enviado con éxito: ",
    "error": "Error al enviar: ",
    "invalidEmail": "Correo inválido"
  }
}
