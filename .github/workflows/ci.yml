name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]

jobs:
  test:
    name: Testes e Qualidade de Código
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm ci
        
      - name: Executar linting
        run: npm run lint
        
      - name: Executar testes
        run: npm test
        
      - name: Verificar cobertura de testes
        run: npm run test:coverage
        
      - name: Upload cobertura para Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build:
    name: Build do Projeto
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm ci
        
      - name: Build do projeto
        run: npm run build
        
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: .next/
          retention-days: 1

  security:
    name: Análise de Segurança
    runs-on: ubuntu-latest
    needs: test
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm ci
        
      - name: Executar auditoria de segurança
        run: npm audit --audit-level=moderate
        
      - name: Executar análise de dependências
        run: npm audit --audit-level=high --json > audit-report.json || true
        
      - name: Upload relatório de segurança
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: audit-report.json
          retention-days: 30

  deploy-staging:
    name: Deploy para Staging
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm ci
        
      - name: Build do projeto
        run: npm run build
        
      - name: Deploy para Vercel (Staging)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  deploy-production:
    name: Deploy para Produção
    runs-on: ubuntu-latest
    needs: [test, build, security]
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
      - name: Checkout do código
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Instalar dependências
        run: npm ci
        
      - name: Build do projeto
        run: npm run build
        
      - name: Deploy para Vercel (Produção)
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod' 